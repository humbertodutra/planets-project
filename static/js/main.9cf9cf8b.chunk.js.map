{"version":3,"sources":["Context/MyContext.jsx","Context/planetsMock.js","Context/MyProvider.jsx","Components/Table.jsx","ServicesApi/apiRequest.js","Components/FilterOptions.jsx","Components/FilterByName.jsx","main.jsx","App.js","index.js"],"names":["MyContext","createContext","planetsMock","name","mass","radius","period","semi_major_axis","temperature","distance_light_year","host_star_mass","host_star_temperature","Provider","children","planetsArray","planetsOfTheSolarSystem","useState","planets","setPlanets","useEffect","contextValue","value","Table","useContext","tableRows","map","planet","index","className","key","table","length","apiKey","env","API_KEY","apiRequest","params","a","fetchData","fetch","headers","response","json","data","console","log","fetched","Filter","selectedOption","setSelectedOption","setValue","isDisabled","setIsDisabled","handleSubmit","e","setTimeout","preventDefault","htmlFor","id","onChange","target","type","onClick","disabled","FilterByName","planetName","setName","color","GalaxyBackground","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cf9cf8b.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst MyContext = createContext();\n\nexport default MyContext;\n","const planetsMock = [\n  {\n    name: 'Mercury',\n    mass: 0.000174,\n    radius: 0.0341,\n    period: 88,\n    semi_major_axis: 0.387098,\n    temperature: 400,\n    distance_light_year: 0.000011,\n    host_star_mass: 1,\n    host_star_temperature: 6000,\n  },\n  {\n    name: 'Venus',\n    mass: 0.00257,\n    radius: 0.0847,\n    period: 224.7,\n    semi_major_axis: 0.723332,\n    temperature: 737,\n    distance_light_year: 0.000004,\n    host_star_mass: 1,\n    host_star_temperature: 6000,\n  },\n  {\n    name: 'Earth',\n    mass: 0.00315,\n    radius: 0.0892,\n    period: 365.2,\n    semi_major_axis: 1,\n    temperature: 288,\n    distance_light_year: 0,\n    host_star_mass: 1,\n    host_star_temperature: 6000,\n  },\n  {\n    name: 'Mars',\n    mass: 0.000338,\n    radius: 0.0488,\n    period: 687,\n    semi_major_axis: 1.542,\n    temperature: 210,\n    distance_light_year: 0.000037,\n    host_star_mass: 1,\n    host_star_temperature: 6000,\n  },\n  {\n    name: 'Jupiter',\n    mass: 1,\n    radius: 1,\n    period: 4331,\n    semi_major_axis: 5.204,\n    temperature: 165,\n    distance_light_year: 0.000088,\n    host_star_mass: 1,\n    host_star_temperature: 6000,\n  },\n  {\n    name: 'Saturn',\n    mass: 0.299,\n    radius: 0.843,\n    period: 10747,\n    semi_major_axis: 9.537,\n    temperature: 134,\n    distance_light_year: 0.00017,\n    host_star_mass: 1,\n    host_star_temperature: 6000,\n  },\n  {\n    name: 'Uranus',\n    mass: 0.0457,\n    radius: 0.358,\n    period: 30589,\n    semi_major_axis: 19.191,\n    temperature: 76,\n    distance_light_year: 0.000304,\n    host_star_mass: 1,\n    host_star_temperature: 6000,\n  },\n  {\n    name: 'Neptune',\n    mass: 0.0537,\n    radius: 0.346,\n    period: 59800,\n    semi_major_axis: 30.07,\n    temperature: 72,\n    distance_light_year: 0.000478,\n    host_star_mass: 1,\n    host_star_temperature: 6000,\n  },\n];\n\nexport default planetsMock;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from './MyContext';\nimport planetsOfTheSolarSystem from './planetsMock';\n\nfunction Provider({ children }) {\n  const planetsArray = planetsOfTheSolarSystem;\n  const [planets, setPlanets] = useState(planetsArray);\n\n  useEffect(() => {\n  });\n\n  const contextValue = {\n    planets,\n    setPlanets,\n  };\n\n  return (\n    <MyContext.Provider value={ contextValue }>\n      {children}\n    </MyContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n","import React, { useContext } from 'react';\nimport MyContext from '../Context/MyContext';\nimport '../App.css';\n\nfunction Table() {\n  const { planets } = useContext(MyContext);\n  const tableRows = planets.map((planet, index) => (\n    <tr className=\"tr\" key={ index }>\n      <td className=\"td\">{planet.name}</td>\n      <td className=\"td\">{planet.mass}</td>\n      <td className=\"td\">{planet.radius}</td>\n      <td className=\"td\">{planet.period}</td>\n      <td className=\"td\">{planet.semi_major_axis}</td>\n      <td className=\"td\">{planet.temperature}</td>\n      <td className=\"td\">{planet.distance_light_year}</td>\n      <td className=\"td\">{planet.host_star_mass}</td>\n      <td className=\"td\">{planet.host_star_temperature}</td>\n    </tr>\n  ));\n  const table = (\n    <div className=\"tableDiv\">\n      <table className=\"table\">\n        <thead className=\"th\">\n          <tr className=\"trHead\">\n            <th className=\"tableH\">Name</th>\n            <th className=\"tableH\">Mass</th>\n            <th className=\"tableH\">Radius</th>\n            <th className=\"tableH\">Period</th>\n            <th className=\"tableH\">Semi-major Axis</th>\n            <th className=\"tableH\">Temperature</th>\n            <th className=\"tableH\">Distance from Light Year</th>\n            <th className=\"tableH\">Host Star Mass</th>\n            <th className=\"tableH\">Host Star Temperature</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tableRows}\n        </tbody>\n      </table>\n    </div>);\n\n  return (\n    <div>\n      {planets.length > 0 ? table\n        : <p>Loading... If the Api response takes a long time, try with new filters </p>}\n    </div>\n  );\n}\n\nexport default Table;\n","import env from 'react-dotenv';\n\nconst apiUrl = 'https://api.api-ninjas.com/v1/planets';\nconst apiKey = env.API_KEY;\n\nconst apiRequest = async (params) => {\n  const fetchData = async () => {\n    const response = await fetch(`${apiUrl}?${params}`, {\n      headers: {\n        'X-Api-Key': apiKey,\n      },\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n  };\n  const fetched = await fetchData();\n  return fetched;\n};\n\nexport default apiRequest;\n","import React, { useState, useContext } from 'react';\nimport '../App.css';\nimport apiRequest from '../ServicesApi/apiRequest';\nimport MyContext from '../Context/MyContext';\n\nfunction Filter() {\n  const [selectedOption, setSelectedOption] = useState('min_mass');\n  const [value, setValue] = useState(1);\n  const { setPlanets } = useContext(MyContext);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const noMagic = 500;\n  const buttonControll = () => {\n    setIsDisabled(true);\n    setTimeout(() => {\n      setIsDisabled(false);\n    }, noMagic);\n  };\n\n  const handleSubmit = async (e) => {\n    buttonControll();\n    e.preventDefault();\n    const params = `${selectedOption}=${value}`;\n    const response = await apiRequest(params);\n    setPlanets(response);\n  };\n\n  return (\n    <form className=\"filter-form\">\n      <h3 className=\"filter-title\">Space Filter</h3>\n      <div className=\"filter-container\">\n        <label\n          htmlFor=\"select-option\"\n          className=\"filter-label\"\n        >\n          Option:\n\n          <select\n            id=\"select-option\"\n            value={ selectedOption }\n            onChange={ (e) => setSelectedOption(e.target.value) }\n            className=\"filter-select\"\n          >\n            <option value=\"min_mass\">Min Mass</option>\n            <option value=\"max_mass\">Max Mass</option>\n            <option value=\"min_radius\">Min Radius</option>\n            <option value=\"max_radius\">Max Radius</option>\n            <option value=\"min_period\">Min Period</option>\n            <option value=\"max_period\">Max Period</option>\n            <option value=\"min_temperature\">Min Temperature</option>\n            <option value=\"max_temperature\">Max Temperature</option>\n            <option value=\"min_distance_light_year\">Min Distance Light Year</option>\n            <option value=\"max_distance_light_year\">Max Distance Light Year</option>\n            <option value=\"min_semi_major_axis\">Min Semi Major Axis</option>\n            <option value=\"max_semi_major_axis\">Max Semi Major Axis</option>\n          </select>\n          <br />\n        </label>\n        <label htmlFor=\"value\" className=\"filter-label\">\n          Value:\n          <input\n            type=\"number\"\n            id=\"value\"\n            value={ value }\n            onChange={ (e) => setValue(e.target.value) }\n            className=\"filter-input\"\n          />\n        </label>\n        <br />\n        <button\n          className=\"filter-submit\"\n          onClick={ handleSubmit }\n          type=\"submit\"\n          disabled={ isDisabled }\n        >\n          Filter\n\n        </button>\n\n      </div>\n    </form>\n  );\n}\n\nexport default Filter;\n","import React, { useState, useContext } from 'react';\nimport apiRequest from '../ServicesApi/apiRequest';\nimport MyContext from '../Context/MyContext';\n\nconst FilterByName = () => {\n  const { setPlanets } = useContext(MyContext);\n  const [planetName, setName] = useState('Earth');\n  const [isDisabled, setIsDisabled] = useState(false);\n  const NoMagic = 500;\n\n  const buttonControll = () => {\n    setIsDisabled(true);\n    setTimeout(() => {\n      setIsDisabled(false);\n    }, NoMagic);\n  };\n\n  const handleSubmit = async (e) => {\n    buttonControll();\n    e.preventDefault();\n    const params = `${'name'}=${planetName}`;\n    const response = await apiRequest(params);\n    setPlanets(response);\n  };\n\n  return (\n    <form className=\"filter-form\">\n      <label className=\"filter-label\" htmlFor=\"filter-input\">\n        Planet Name:\n        <input\n          className=\"filter-input\"\n          type=\"text\"\n          value={ planetName }\n          onChange={ (e) => setName(e.target.value) }\n        />\n      </label>\n      <button\n        color=\"black\"\n        type=\"submit\"\n        className=\"filter-submit\"\n        disabled={ isDisabled }\n        onClick={ handleSubmit }\n      >\n        {' '}\n        Filter by name (Enslish)\n        {' '}\n\n      </button>\n    </form>\n  );\n};\n\nexport default FilterByName;\n","import React from 'react';\nimport './App.css';\nimport Table from './Components/Table';\nimport Filter from './Components/FilterOptions';\nimport FilterByName from './Components/FilterByName';\n\nconst GalaxyBackground = () => (\n  <main className=\"Main\">\n    <div className=\"title-div\">\n      <h1 className=\"title\">Galaxy System</h1>\n      <p className=\"description\">\n        {' '}\n        This project is using the api to fetch the list of planets\n        https://api-ninjas.com/api/planets\n        {' '}\n      </p>\n    </div>\n    <Filter />\n    <FilterByName />\n    <Table />\n  </main>\n);\n\nexport default GalaxyBackground;\n","import React from 'react';\nimport './App.css';\nimport Provider from './Context/MyProvider';\nimport GalaxyBackground from './main';\n\nfunction App() {\n  return (\n    <Provider>\n      <GalaxyBackground />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}